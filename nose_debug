nose.config: INFO: Ignoring files matching ['^\\.', '^_', '^setup\\.py$']
nose.plugins.manager: DEBUG: Configuring plugins
nose.plugins.manager: DEBUG: Plugins enabled: [<nose.plugins.capture.Capture object at 0x10123dfd0>, <nose.plugins.logcapture.LogCapture object at 0x102107048>, <nose.plugins.deprecated.Deprecated object at 0x1021121d0>, <nose.plugins.skip.Skip object at 0x102232e80>]
nose.core: DEBUG: configured Config(addPaths=True, args=(), configSection='nosetests', debug='nose,nose.importer', debugLog='nose_debug', env={}, exclude=None, files=[], firstPackageWins=False, getTestCaseNamesCompat=False, ignoreFiles=[re.compile('^\\.'), re.compile('^_'), re.compile('^setup\\.py$')], ignoreFilesDefaultStrings=['^\\.', '^_', '^setup\\.py$'], include=None, includeExe=False, logStream=<_io.TextIOWrapper name='<stderr>' mode='w' encoding='UTF-8'>, loggingConfig=None, options=<Values at 0x102243ac8: {'cover_erase': None, 'ignoreFiles': [], 'doctest_tests': None, 'debugBoth': False, 'debugErrors': False, 'enable_plugin_doctest': None, 'byteCompile': True, 'cover_branches': None, 'collect_only': None, 'cover_tests': None, 'doctestOptions': None, 'failed': False, 'enable_plugin_id': None, 'debug': 'nose,nose.importer', 'include': [], 'multiprocess_workers': 0, 'where': None, 'cover_html_dir': 'cover', 'detailedErrors': None, 'py3where': None, 'cover_xml': None, 'loggingConfig': None, 'testNames': None, 'multiprocess_restartworker': False, 'attr': None, 'doctestExtension': None, 'cover_inclusive': None, 'testMatch': '(?:^|[\\b_\\./-])[Tt]est', 'multiprocess_timeout': 10, 'cover_packages': None, 'version': False, 'xunit_file': 'nosetests.xml', 'xunit_testsuite_name': 'nosetests', 'doctestFixtures': None, 'logcapture_filters': None, 'stopOnError': False, 'eval_attr': None, 'enable_plugin_allmodules': None, 'doctest_result_var': None, 'testIdFile': '.noseids', 'showPlugins': False, 'enable_plugin_coverage': None, 'files': None, 'exclude': [], 'debugLog': 'nose_debug', 'capture': True, 'enable_plugin_isolation': None, 'logcapture_clear': False, 'enable_plugin_xunit': None, 'addPaths': True, 'noDeprecated': False, 'logcapture_datefmt': None, 'cover_min_percentage': None, 'firstPackageWins': False, 'cover_html': None, 'logcapture': True, 'debugFailures': False, 'noSkip': False, 'logcapture_level': 'NOTSET', 'logcapture_format': '%(name)s: %(levelname)s: %(message)s', 'verbosity': 1, 'cover_xml_file': 'coverage.xml', 'includeExe': False, 'traverseNamespace': False}>, parser=<optparse.OptionParser object at 0x100619be0>, parserClass=<class 'optparse.OptionParser'>, plugins=<nose.plugins.manager.DefaultPluginManager object at 0x10053e470>, py3where=(), runOnInit=True, srcDirs=('lib', 'src'), stopOnError=False, stream=<_io.TextIOWrapper name='<stderr>' mode='w' encoding='UTF-8'>, testMatch=re.compile('(?:^|[\\b_\\./-])[Tt]est'), testMatchPat='(?:^|[\\b_\\./-])[Tt]est', testNames=[], traverseNamespace=False, verbosity=1, where=(), worker=False, workingDir='/Users/dbuchan/Code/commandRunner')
nose.importer: DEBUG: Add path /Users/dbuchan/Code/commandRunner
nose.importer: DEBUG: insert /Users/dbuchan/Code/commandRunner into sys.path
nose.core: DEBUG: test loader is <nose.loader.TestLoader object at 0x102243cc0>
nose.core: DEBUG: defaultTest .
nose.core: DEBUG: Test names are ['.']
nose.core: DEBUG: createTests called with None
nose.loader: DEBUG: load from . (None)
nose.selector: DEBUG: Test name . resolved to file ., module None, call None
nose.selector: DEBUG: Final resolution of test name .: file /Users/dbuchan/Code/commandRunner module None call None
nose.suite: DEBUG: Create suite for [<nose.suite.LazySuite tests=generator (4330967224)>]
nose.suite: DEBUG: tests [<nose.suite.LazySuite tests=generator (4330967224)>] context None
nose.suite: DEBUG: wrap [<nose.suite.LazySuite tests=generator (4330967224)>]
nose.suite: DEBUG: wrapping <nose.suite.LazySuite tests=generator (4330967224)>
nose.suite: DEBUG: Context suite for [<nose.suite.LazySuite tests=generator (4330967224)>] (None) (4330897136)
nose.core: DEBUG: runTests called
nose.suite: DEBUG: suite 4330897136 (<nose.suite.ContextSuite context=None>) run called, tests: <generator object _get_wrapped_tests at 0x102245678>
nose.suite: DEBUG: suite 4330897136 setUp called, tests: <generator object _get_wrapped_tests at 0x102245678>
nose.suite: DEBUG: tests in 4330897136?
nose.suite: DEBUG: precache is [<nose.suite.LazySuite tests=generator (4330967224)>]
nose.suite: DEBUG: precache is []
nose.loader: DEBUG: load from dir /Users/dbuchan/Code/commandRunner
nose.importer: DEBUG: Add path /Users/dbuchan/Code/commandRunner
nose.selector: DEBUG: wantFile /Users/dbuchan/Code/commandRunner/MANIFEST.in? False
nose.selector: DEBUG: wantFile /Users/dbuchan/Code/commandRunner/README.rst? False
nose.selector: DEBUG: wantDirectory /Users/dbuchan/Code/commandRunner/commandRunner? True
nose.loader: DEBUG: load from /Users/dbuchan/Code/commandRunner/commandRunner (None)
nose.selector: DEBUG: Test name /Users/dbuchan/Code/commandRunner/commandRunner resolved to file /Users/dbuchan/Code/commandRunner/commandRunner, module None, call None
nose.selector: DEBUG: Final resolution of test name /Users/dbuchan/Code/commandRunner/commandRunner: file /Users/dbuchan/Code/commandRunner/commandRunner module commandRunner call None
nose.importer: DEBUG: Import commandRunner from /Users/dbuchan/Code/commandRunner
nose.importer: DEBUG: Add path /Users/dbuchan/Code/commandRunner
nose.importer: DEBUG: find module part commandRunner (commandRunner) in ['/Users/dbuchan/Code/commandRunner']
nose.loader: DEBUG: Load from module <module 'commandRunner' from '/Users/dbuchan/Code/commandRunner/commandRunner/__init__.py'>
nose.selector: DEBUG: wantModule <module 'commandRunner' from '/Users/dbuchan/Code/commandRunner/commandRunner/__init__.py'>? False
nose.loader: DEBUG: Load tests from module path /Users/dbuchan/Code/commandRunner/commandRunner?
nose.loader: DEBUG: path: /Users/dbuchan/Code/commandRunner/commandRunner os.path.realpath(/Users/dbuchan/Code/commandRunner/commandRunner): /Users/dbuchan/Code/commandRunner/commandRunner
nose.loader: DEBUG: load from dir /Users/dbuchan/Code/commandRunner/commandRunner
nose.importer: DEBUG: Add path /Users/dbuchan/Code/commandRunner/commandRunner
nose.importer: DEBUG: Add path /Users/dbuchan/Code/commandRunner
nose.selector: DEBUG: __init__.py matches ignoreFiles pattern; skipped
nose.selector: DEBUG: wantFile /Users/dbuchan/Code/commandRunner/commandRunner/commandRunner.py? None
nose.selector: DEBUG: wantFile /Users/dbuchan/Code/commandRunner/commandRunner/localRunner.py? None
nose.suite: DEBUG: Create suite for <nose.suite.ContextList object at 0x1022555f8>
nose.suite: DEBUG: tests <nose.suite.ContextList object at 0x1022555f8> context <module 'commandRunner' from '/Users/dbuchan/Code/commandRunner/commandRunner/__init__.py'>
nose.suite: DEBUG: Context suite for <nose.suite.ContextList object at 0x1022555f8> (<module 'commandRunner' from '/Users/dbuchan/Code/commandRunner/commandRunner/__init__.py'>) (4330968792)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=commandRunner> has context commandRunner
nose.suite: DEBUG: get ancestry <module 'commandRunner' from '/Users/dbuchan/Code/commandRunner/commandRunner/__init__.py'>
nose.suite: DEBUG: suite 4330968792 (<nose.suite.ContextSuite context=commandRunner>) run called, tests: <generator object _get_wrapped_tests at 0x1022457e0>
nose.suite: DEBUG: suite 4330968792 setUp called, tests: <generator object _get_wrapped_tests at 0x1022457e0>
nose.suite: DEBUG: tests in 4330968792?
nose.suite: DEBUG: suite 4330968792 has no tests
nose.suite: DEBUG: precache is []
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: No reason to teardown (was_setup? False was_torndown? False)
nose.selector: DEBUG: wantDirectory /Users/dbuchan/Code/commandRunner/commandRunner.egg-info? False
nose.selector: DEBUG: wantFile /Users/dbuchan/Code/commandRunner/nose_debug? False
nose.selector: DEBUG: setup.py matches ignoreFiles pattern; skipped
nose.selector: DEBUG: wantDirectory /Users/dbuchan/Code/commandRunner/tests? True
nose.loader: DEBUG: load from /Users/dbuchan/Code/commandRunner/tests (None)
nose.selector: DEBUG: Test name /Users/dbuchan/Code/commandRunner/tests resolved to file /Users/dbuchan/Code/commandRunner/tests, module None, call None
nose.selector: DEBUG: Final resolution of test name /Users/dbuchan/Code/commandRunner/tests: file /Users/dbuchan/Code/commandRunner/tests module tests call None
nose.importer: DEBUG: Import tests from /Users/dbuchan/Code/commandRunner
nose.importer: DEBUG: Add path /Users/dbuchan/Code/commandRunner
nose.importer: DEBUG: find module part tests (tests) in ['/Users/dbuchan/Code/commandRunner']
nose.loader: DEBUG: Load from module <module 'tests' from '/Users/dbuchan/Code/commandRunner/tests/__init__.py'>
nose.selector: DEBUG: wantModule <module 'tests' from '/Users/dbuchan/Code/commandRunner/tests/__init__.py'>? True
nose.loader: DEBUG: Load tests from module path /Users/dbuchan/Code/commandRunner/tests?
nose.loader: DEBUG: path: /Users/dbuchan/Code/commandRunner/tests os.path.realpath(/Users/dbuchan/Code/commandRunner/tests): /Users/dbuchan/Code/commandRunner/tests
nose.loader: DEBUG: load from dir /Users/dbuchan/Code/commandRunner/tests
nose.importer: DEBUG: Add path /Users/dbuchan/Code/commandRunner/tests
nose.importer: DEBUG: Add path /Users/dbuchan/Code/commandRunner
nose.selector: DEBUG: __init__.py matches ignoreFiles pattern; skipped
nose.selector: DEBUG: wantFile /Users/dbuchan/Code/commandRunner/tests/env.py? None
nose.selector: DEBUG: wantFile /Users/dbuchan/Code/commandRunner/tests/test_localRunner.py? True
nose.loader: DEBUG: load from /Users/dbuchan/Code/commandRunner/tests/test_localRunner.py (None)
nose.selector: DEBUG: Test name /Users/dbuchan/Code/commandRunner/tests/test_localRunner.py resolved to file /Users/dbuchan/Code/commandRunner/tests/test_localRunner.py, module None, call None
nose.selector: DEBUG: Final resolution of test name /Users/dbuchan/Code/commandRunner/tests/test_localRunner.py: file /Users/dbuchan/Code/commandRunner/tests/test_localRunner.py module tests.test_localRunner call None
nose.importer: DEBUG: Import tests.test_localRunner from /Users/dbuchan/Code/commandRunner
nose.importer: DEBUG: Add path /Users/dbuchan/Code/commandRunner
nose.importer: DEBUG: find module part tests (tests) in ['/Users/dbuchan/Code/commandRunner']
nose.importer: DEBUG: sys.modules has tests as <module 'tests' from '/Users/dbuchan/Code/commandRunner/tests/__init__.py'>
nose.importer: DEBUG: module already loaded? mod: /Users/dbuchan/Code/commandRunner/tests new: /Users/dbuchan/Code/commandRunner/tests
nose.importer: DEBUG: find module part test_localRunner (tests.test_localRunner) in ['/Users/dbuchan/Code/commandRunner/tests']
nose.failure: DEBUG: A failure! <class 'ImportError'> No module named 'env' ['  File "/Users/dbuchan/.virtualenvs/commandRunner/lib/python3.4/site-packages/nose/loader.py", line 418, in loadTestsFromName\n    addr.filename, addr.module)\n', '  File "/Users/dbuchan/.virtualenvs/commandRunner/lib/python3.4/site-packages/nose/importer.py", line 47, in importFromPath\n    return self.importFromDir(dir_path, fqname)\n', '  File "/Users/dbuchan/.virtualenvs/commandRunner/lib/python3.4/site-packages/nose/importer.py", line 94, in importFromDir\n    mod = load_module(part_fqname, fh, filename, desc)\n', '  File "/Users/dbuchan/.virtualenvs/commandRunner/lib/python3.4/imp.py", line 235, in load_module\n    return load_source(name, filename, file)\n', '  File "/Users/dbuchan/.virtualenvs/commandRunner/lib/python3.4/imp.py", line 171, in load_source\n    module = methods.load()\n', '  File "<frozen importlib._bootstrap>", line 1220, in load\n', '  File "<frozen importlib._bootstrap>", line 1200, in _load_unlocked\n', '  File "<frozen importlib._bootstrap>", line 1129, in _exec\n', '  File "<frozen importlib._bootstrap>", line 1471, in exec_module\n', '  File "<frozen importlib._bootstrap>", line 321, in _call_with_frames_removed\n', '  File "/Users/dbuchan/Code/commandRunner/tests/test_localRunner.py", line 6, in <module>\n    import env\n']
nose.suite: DEBUG: Create suite for [<nose.failure.Failure testMethod=runTest>]
nose.suite: DEBUG: tests [<nose.failure.Failure testMethod=runTest>] context None
nose.suite: DEBUG: wrap [<nose.failure.Failure testMethod=runTest>]
nose.suite: DEBUG: wrapping Failure: ImportError (No module named 'env')
nose.suite: DEBUG: Context suite for [Test(<nose.failure.Failure testMethod=runTest>)] (<class 'nose.failure.Failure'>) (4330970136)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has context Failure
nose.suite: DEBUG: get ancestry <class 'nose.failure.Failure'>
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose', 'failure']
nose: DEBUG: __import__ nose.failure
nose: DEBUG: resolve: ['failure'], nose.failure, <module 'nose' from '/Users/dbuchan/.virtualenvs/commandRunner/lib/python3.4/site-packages/nose/__init__.py'>, <module 'nose' from '/Users/dbuchan/.virtualenvs/commandRunner/lib/python3.4/site-packages/nose/__init__.py'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose.failure
nose.suite: DEBUG:  <class 'nose.failure.Failure'> ancestors ['nose']
nose: DEBUG: __import__ nose
nose: DEBUG: resolve: [], nose, <module 'nose' from '/Users/dbuchan/.virtualenvs/commandRunner/lib/python3.4/site-packages/nose/__init__.py'>, <module 'nose' from '/Users/dbuchan/.virtualenvs/commandRunner/lib/python3.4/site-packages/nose/__init__.py'>
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=Failure> has ancestor nose
nose.suite: DEBUG: Create suite for <nose.suite.ContextList object at 0x1022555f8>
nose.suite: DEBUG: tests <nose.suite.ContextList object at 0x1022555f8> context <module 'tests' from '/Users/dbuchan/Code/commandRunner/tests/__init__.py'>
nose.suite: DEBUG: Context suite for <nose.suite.ContextList object at 0x1022555f8> (<module 'tests' from '/Users/dbuchan/Code/commandRunner/tests/__init__.py'>) (4330968064)
nose.suite: DEBUG: suite <nose.suite.ContextSuite context=tests> has context tests
nose.suite: DEBUG: get ancestry <module 'tests' from '/Users/dbuchan/Code/commandRunner/tests/__init__.py'>
nose.suite: DEBUG: suite 4330968064 (<nose.suite.ContextSuite context=tests>) run called, tests: <generator object _get_wrapped_tests at 0x1022457e0>
nose.suite: DEBUG: suite 4330968064 setUp called, tests: <generator object _get_wrapped_tests at 0x1022457e0>
nose.suite: DEBUG: tests in 4330968064?
nose.suite: DEBUG: ancestor <module 'tests' from '/Users/dbuchan/Code/commandRunner/tests/__init__.py'> may need setup
nose.suite: DEBUG: ancestor <module 'tests' from '/Users/dbuchan/Code/commandRunner/tests/__init__.py'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=tests> setup context <module 'tests' from '/Users/dbuchan/Code/commandRunner/tests/__init__.py'>
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [<nose.suite.ContextSuite context=Failure>]
nose.suite: DEBUG: suite 4330970136 (<nose.suite.ContextSuite context=Failure>) run called, tests: <generator object _get_wrapped_tests at 0x10229e5e8>
nose.suite: DEBUG: suite 4330970136 setUp called, tests: <generator object _get_wrapped_tests at 0x10229e5e8>
nose.suite: DEBUG: tests in 4330970136?
nose.suite: DEBUG: ancestor <module 'nose' from '/Users/dbuchan/.virtualenvs/commandRunner/lib/python3.4/site-packages/nose/__init__.py'> may need setup
nose.suite: DEBUG: ancestor <module 'nose' from '/Users/dbuchan/.virtualenvs/commandRunner/lib/python3.4/site-packages/nose/__init__.py'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <module 'nose' from '/Users/dbuchan/.virtualenvs/commandRunner/lib/python3.4/site-packages/nose/__init__.py'>
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/Users/dbuchan/.virtualenvs/commandRunner/lib/python3.4/site-packages/nose/failure.py'> may need setup
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/Users/dbuchan/.virtualenvs/commandRunner/lib/python3.4/site-packages/nose/failure.py'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <module 'nose.failure' from '/Users/dbuchan/.virtualenvs/commandRunner/lib/python3.4/site-packages/nose/failure.py'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need setup
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> does need setup
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup context <class 'nose.failure.Failure'>
nose: DEBUG: call fixture <class 'nose.failure.Failure'>.setUpClass
nose.suite: DEBUG: completed suite setup
nose.suite: DEBUG: precache is [Test(<nose.failure.Failure testMethod=runTest>)]
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <class 'nose.failure.Failure'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <class 'nose.failure.Failure'>
nose: DEBUG: call fixture <class 'nose.failure.Failure'>.tearDownClass
nose.suite: DEBUG: ancestor <module 'nose.failure' from '/Users/dbuchan/.virtualenvs/commandRunner/lib/python3.4/site-packages/nose/failure.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose.failure' from '/Users/dbuchan/.virtualenvs/commandRunner/lib/python3.4/site-packages/nose/failure.py'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <module 'nose.failure' from '/Users/dbuchan/.virtualenvs/commandRunner/lib/python3.4/site-packages/nose/failure.py'>
nose.suite: DEBUG: ancestor <module 'nose' from '/Users/dbuchan/.virtualenvs/commandRunner/lib/python3.4/site-packages/nose/__init__.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> setup ancestor <module 'nose' from '/Users/dbuchan/.virtualenvs/commandRunner/lib/python3.4/site-packages/nose/__init__.py'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=Failure> teardown context <module 'nose' from '/Users/dbuchan/.virtualenvs/commandRunner/lib/python3.4/site-packages/nose/__init__.py'>
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> may need teardown
nose.suite: DEBUG: ancestor <class 'nose.failure.Failure'> already torn down
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: ancestor <module 'tests' from '/Users/dbuchan/Code/commandRunner/tests/__init__.py'> may need teardown
nose.suite: DEBUG: <nose.suite.ContextSuite context=tests> setup ancestor <module 'tests' from '/Users/dbuchan/Code/commandRunner/tests/__init__.py'>
nose.suite: DEBUG: <nose.suite.ContextSuite context=tests> teardown context <module 'tests' from '/Users/dbuchan/Code/commandRunner/tests/__init__.py'>
nose.suite: DEBUG: ancestor <module 'tests' from '/Users/dbuchan/Code/commandRunner/tests/__init__.py'> may need teardown
nose.suite: DEBUG: ancestor <module 'tests' from '/Users/dbuchan/Code/commandRunner/tests/__init__.py'> already torn down
nose.suite: DEBUG: context teardown
nose.suite: DEBUG: No reason to teardown (was_setup? False was_torndown? False)
